// -*- C++ -*-

//
// Created by ndraey on 11.01.24.
//

#pragma once

#include "memory"

extern "C" {
	#include <stdarg.h>
}

namespace std {
	class string {
	public:
	    string();
	    string(const char* charptr);
	    string(const string& str) = default;
	    ~string();

	    [[nodiscard]] char * begin() const;
	    [[nodiscard]] char * end() const;

	    const char* c_str() const;
	    char* data() const;
	    
		void resize(size_t new_size);
	    void Append(const string &str);
	    void Append(const char *charptr);
	    void Append(char character);
	    string Slice(int start = 0, int sting_length = -1);

		bool empty() const;

		size_t length() const;

	    string& operator =(const char* charptr);
	    
	    string& operator +(const char* charptr);
	    
	    string& operator +=(const char* charptr);
	    string& operator +=(const string& str);
	    
	    char operator[](int index);

	    bool operator==(const char* charptr);
	    bool operator==(const string& string);

	    bool operator!=(const char* charptr);

	private:
	    char* string_container = nullptr;
	    int _length = 0;
	};

}

